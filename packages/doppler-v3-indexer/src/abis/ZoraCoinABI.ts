export const ZoraCoinABI = [
    {
      type: "constructor",
      inputs: [
        {
          name: "_protocolRewardRecipient",
          type: "address",
          internalType: "address",
        },
        { name: "_protocolRewards", type: "address", internalType: "address" },
        { name: "_weth", type: "address", internalType: "address" },
        { name: "_v3Factory", type: "address", internalType: "address" },
        { name: "_swapRouter", type: "address", internalType: "address" },
        { name: "_airlock", type: "address", internalType: "address" },
      ],
      stateMutability: "nonpayable",
    },
    { type: "receive", stateMutability: "payable" },
    {
      type: "function",
      name: "DOMAIN_SEPARATOR",
      inputs: [],
      outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "MAX_TOTAL_SUPPLY",
      inputs: [],
      outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "MIN_ORDER_SIZE",
      inputs: [],
      outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "PLATFORM_REFERRER_FEE_BPS",
      inputs: [],
      outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "PROTOCOL_FEE_BPS",
      inputs: [],
      outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "TOKEN_CREATOR_FEE_BPS",
      inputs: [],
      outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "TOTAL_FEE_BPS",
      inputs: [],
      outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "TRADE_REFERRER_FEE_BPS",
      inputs: [],
      outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "WETH",
      inputs: [],
      outputs: [{ name: "", type: "address", internalType: "address" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "addOwner",
      inputs: [{ name: "account", type: "address", internalType: "address" }],
      outputs: [],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "addOwners",
      inputs: [
        { name: "accounts", type: "address[]", internalType: "address[]" },
      ],
      outputs: [],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "airlock",
      inputs: [],
      outputs: [{ name: "", type: "address", internalType: "address" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "allowance",
      inputs: [
        { name: "owner", type: "address", internalType: "address" },
        { name: "spender", type: "address", internalType: "address" },
      ],
      outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "approve",
      inputs: [
        { name: "spender", type: "address", internalType: "address" },
        { name: "value", type: "uint256", internalType: "uint256" },
      ],
      outputs: [{ name: "", type: "bool", internalType: "bool" }],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "balanceOf",
      inputs: [{ name: "account", type: "address", internalType: "address" }],
      outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "burn",
      inputs: [{ name: "amount", type: "uint256", internalType: "uint256" }],
      outputs: [],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "buy",
      inputs: [
        { name: "recipient", type: "address", internalType: "address" },
        { name: "orderSize", type: "uint256", internalType: "uint256" },
        { name: "minAmountOut", type: "uint256", internalType: "uint256" },
        { name: "sqrtPriceLimitX96", type: "uint160", internalType: "uint160" },
        { name: "tradeReferrer", type: "address", internalType: "address" },
      ],
      outputs: [
        { name: "", type: "uint256", internalType: "uint256" },
        { name: "", type: "uint256", internalType: "uint256" },
      ],
      stateMutability: "payable",
    },
    {
      type: "function",
      name: "claimSecondaryRewards",
      inputs: [{ name: "pushEthRewards", type: "bool", internalType: "bool" }],
      outputs: [],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "contractURI",
      inputs: [],
      outputs: [{ name: "", type: "string", internalType: "string" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "contractVersion",
      inputs: [],
      outputs: [{ name: "", type: "string", internalType: "string" }],
      stateMutability: "pure",
    },
    {
      type: "function",
      name: "currency",
      inputs: [],
      outputs: [{ name: "", type: "address", internalType: "address" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "decimals",
      inputs: [],
      outputs: [{ name: "", type: "uint8", internalType: "uint8" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "eip712Domain",
      inputs: [],
      outputs: [
        { name: "fields", type: "bytes1", internalType: "bytes1" },
        { name: "name", type: "string", internalType: "string" },
        { name: "version", type: "string", internalType: "string" },
        { name: "chainId", type: "uint256", internalType: "uint256" },
        { name: "verifyingContract", type: "address", internalType: "address" },
        { name: "salt", type: "bytes32", internalType: "bytes32" },
        { name: "extensions", type: "uint256[]", internalType: "uint256[]" },
      ],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "initialize",
      inputs: [
        { name: "payoutRecipient_", type: "address", internalType: "address" },
        { name: "owners_", type: "address[]", internalType: "address[]" },
        { name: "tokenURI_", type: "string", internalType: "string" },
        { name: "name_", type: "string", internalType: "string" },
        { name: "symbol_", type: "string", internalType: "string" },
        { name: "poolConfig_", type: "bytes", internalType: "bytes" },
        { name: "platformReferrer_", type: "address", internalType: "address" },
      ],
      outputs: [],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "isOwner",
      inputs: [{ name: "account", type: "address", internalType: "address" }],
      outputs: [{ name: "", type: "bool", internalType: "bool" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "name",
      inputs: [],
      outputs: [{ name: "", type: "string", internalType: "string" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "nonces",
      inputs: [{ name: "owner", type: "address", internalType: "address" }],
      outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "owners",
      inputs: [],
      outputs: [{ name: "", type: "address[]", internalType: "address[]" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "payoutRecipient",
      inputs: [],
      outputs: [{ name: "", type: "address", internalType: "address" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "permit",
      inputs: [
        { name: "owner", type: "address", internalType: "address" },
        { name: "spender", type: "address", internalType: "address" },
        { name: "value", type: "uint256", internalType: "uint256" },
        { name: "deadline", type: "uint256", internalType: "uint256" },
        { name: "v", type: "uint8", internalType: "uint8" },
        { name: "r", type: "bytes32", internalType: "bytes32" },
        { name: "s", type: "bytes32", internalType: "bytes32" },
      ],
      outputs: [],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "platformReferrer",
      inputs: [],
      outputs: [{ name: "", type: "address", internalType: "address" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "poolAddress",
      inputs: [],
      outputs: [{ name: "", type: "address", internalType: "address" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "poolState",
      inputs: [],
      outputs: [
        { name: "asset", type: "address", internalType: "address" },
        { name: "numeraire", type: "address", internalType: "address" },
        { name: "tickLower", type: "int24", internalType: "int24" },
        { name: "tickUpper", type: "int24", internalType: "int24" },
        { name: "numPositions", type: "uint16", internalType: "uint16" },
        { name: "isInitialized", type: "bool", internalType: "bool" },
        { name: "isExited", type: "bool", internalType: "bool" },
        { name: "maxShareToBeSold", type: "uint256", internalType: "uint256" },
        {
          name: "totalTokensOnBondingCurve",
          type: "uint256",
          internalType: "uint256",
        },
      ],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "protocolRewardRecipient",
      inputs: [],
      outputs: [{ name: "", type: "address", internalType: "address" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "protocolRewards",
      inputs: [],
      outputs: [{ name: "", type: "address", internalType: "address" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "removeOwner",
      inputs: [{ name: "account", type: "address", internalType: "address" }],
      outputs: [],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "removeOwners",
      inputs: [
        { name: "accounts", type: "address[]", internalType: "address[]" },
      ],
      outputs: [],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "revokeOwnership",
      inputs: [],
      outputs: [],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "sell",
      inputs: [
        { name: "recipient", type: "address", internalType: "address" },
        { name: "orderSize", type: "uint256", internalType: "uint256" },
        { name: "minAmountOut", type: "uint256", internalType: "uint256" },
        { name: "sqrtPriceLimitX96", type: "uint160", internalType: "uint160" },
        { name: "tradeReferrer", type: "address", internalType: "address" },
      ],
      outputs: [
        { name: "", type: "uint256", internalType: "uint256" },
        { name: "", type: "uint256", internalType: "uint256" },
      ],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "setContractURI",
      inputs: [{ name: "newURI", type: "string", internalType: "string" }],
      outputs: [],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "setPayoutRecipient",
      inputs: [
        { name: "newPayoutRecipient", type: "address", internalType: "address" },
      ],
      outputs: [],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "supportsInterface",
      inputs: [{ name: "interfaceId", type: "bytes4", internalType: "bytes4" }],
      outputs: [{ name: "", type: "bool", internalType: "bool" }],
      stateMutability: "pure",
    },
    {
      type: "function",
      name: "swapRouter",
      inputs: [],
      outputs: [{ name: "", type: "address", internalType: "address" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "symbol",
      inputs: [],
      outputs: [{ name: "", type: "string", internalType: "string" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "tokenURI",
      inputs: [],
      outputs: [{ name: "", type: "string", internalType: "string" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "totalSupply",
      inputs: [],
      outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "transfer",
      inputs: [
        { name: "to", type: "address", internalType: "address" },
        { name: "value", type: "uint256", internalType: "uint256" },
      ],
      outputs: [{ name: "", type: "bool", internalType: "bool" }],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "transferFrom",
      inputs: [
        { name: "from", type: "address", internalType: "address" },
        { name: "to", type: "address", internalType: "address" },
        { name: "value", type: "uint256", internalType: "uint256" },
      ],
      outputs: [{ name: "", type: "bool", internalType: "bool" }],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "uniswapV3MintCallback",
      inputs: [
        { name: "amount0Owed", type: "uint256", internalType: "uint256" },
        { name: "amount1Owed", type: "uint256", internalType: "uint256" },
        { name: "", type: "bytes", internalType: "bytes" },
      ],
      outputs: [],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "v3Factory",
      inputs: [],
      outputs: [{ name: "", type: "address", internalType: "address" }],
      stateMutability: "view",
    },
    {
      type: "event",
      name: "Approval",
      inputs: [
        {
          name: "owner",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "spender",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "value",
          type: "uint256",
          indexed: false,
          internalType: "uint256",
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "CoinBuy",
      inputs: [
        {
          name: "buyer",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "recipient",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "tradeReferrer",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "coinsPurchased",
          type: "uint256",
          indexed: false,
          internalType: "uint256",
        },
        {
          name: "currency",
          type: "address",
          indexed: false,
          internalType: "address",
        },
        {
          name: "amountFee",
          type: "uint256",
          indexed: false,
          internalType: "uint256",
        },
        {
          name: "amountSold",
          type: "uint256",
          indexed: false,
          internalType: "uint256",
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "CoinMarketRewards",
      inputs: [
        {
          name: "payoutRecipient",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "platformReferrer",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "protocolRewardRecipient",
          type: "address",
          indexed: false,
          internalType: "address",
        },
        {
          name: "currency",
          type: "address",
          indexed: false,
          internalType: "address",
        },
        {
          name: "marketRewards",
          type: "tuple",
          indexed: false,
          internalType: "struct ICoin.MarketRewards",
          components: [
            {
              name: "totalAmountCurrency",
              type: "uint256",
              internalType: "uint256",
            },
            { name: "totalAmountCoin", type: "uint256", internalType: "uint256" },
            {
              name: "creatorPayoutAmountCurrency",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "creatorPayoutAmountCoin",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "platformReferrerAmountCurrency",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "platformReferrerAmountCoin",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "protocolAmountCurrency",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "protocolAmountCoin",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "CoinPayoutRecipientUpdated",
      inputs: [
        {
          name: "caller",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "prevRecipient",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "newRecipient",
          type: "address",
          indexed: true,
          internalType: "address",
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "CoinSell",
      inputs: [
        {
          name: "seller",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "recipient",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "tradeReferrer",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "coinsSold",
          type: "uint256",
          indexed: false,
          internalType: "uint256",
        },
        {
          name: "currency",
          type: "address",
          indexed: false,
          internalType: "address",
        },
        {
          name: "amountFee",
          type: "uint256",
          indexed: false,
          internalType: "uint256",
        },
        {
          name: "amountPurchased",
          type: "uint256",
          indexed: false,
          internalType: "uint256",
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "CoinTradeRewards",
      inputs: [
        {
          name: "payoutRecipient",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "platformReferrer",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "tradeReferrer",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "protocolRewardRecipient",
          type: "address",
          indexed: false,
          internalType: "address",
        },
        {
          name: "creatorReward",
          type: "uint256",
          indexed: false,
          internalType: "uint256",
        },
        {
          name: "platformReferrerReward",
          type: "uint256",
          indexed: false,
          internalType: "uint256",
        },
        {
          name: "traderReferrerReward",
          type: "uint256",
          indexed: false,
          internalType: "uint256",
        },
        {
          name: "protocolReward",
          type: "uint256",
          indexed: false,
          internalType: "uint256",
        },
        {
          name: "currency",
          type: "address",
          indexed: false,
          internalType: "address",
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "CoinTransfer",
      inputs: [
        {
          name: "sender",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "recipient",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "amount",
          type: "uint256",
          indexed: false,
          internalType: "uint256",
        },
        {
          name: "senderBalance",
          type: "uint256",
          indexed: false,
          internalType: "uint256",
        },
        {
          name: "recipientBalance",
          type: "uint256",
          indexed: false,
          internalType: "uint256",
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "ContractMetadataUpdated",
      inputs: [
        {
          name: "caller",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "newURI",
          type: "string",
          indexed: false,
          internalType: "string",
        },
        { name: "name", type: "string", indexed: false, internalType: "string" },
      ],
      anonymous: false,
    },
    { type: "event", name: "ContractURIUpdated", inputs: [], anonymous: false },
    { type: "event", name: "EIP712DomainChanged", inputs: [], anonymous: false },
    {
      type: "event",
      name: "Initialized",
      inputs: [
        {
          name: "version",
          type: "uint64",
          indexed: false,
          internalType: "uint64",
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "OwnerUpdated",
      inputs: [
        {
          name: "caller",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "prevOwner",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "newOwner",
          type: "address",
          indexed: true,
          internalType: "address",
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "Transfer",
      inputs: [
        { name: "from", type: "address", indexed: true, internalType: "address" },
        { name: "to", type: "address", indexed: true, internalType: "address" },
        {
          name: "value",
          type: "uint256",
          indexed: false,
          internalType: "uint256",
        },
      ],
      anonymous: false,
    },
    { type: "error", name: "AddressZero", inputs: [] },
    { type: "error", name: "AlreadyOwner", inputs: [] },
    { type: "error", name: "CannotMintZeroLiquidity", inputs: [] },
    { type: "error", name: "ECDSAInvalidSignature", inputs: [] },
    {
      type: "error",
      name: "ECDSAInvalidSignatureLength",
      inputs: [{ name: "length", type: "uint256", internalType: "uint256" }],
    },
    {
      type: "error",
      name: "ECDSAInvalidSignatureS",
      inputs: [{ name: "s", type: "bytes32", internalType: "bytes32" }],
    },
    {
      type: "error",
      name: "ERC20InsufficientAllowance",
      inputs: [
        { name: "spender", type: "address", internalType: "address" },
        { name: "allowance", type: "uint256", internalType: "uint256" },
        { name: "needed", type: "uint256", internalType: "uint256" },
      ],
    },
    {
      type: "error",
      name: "ERC20InsufficientBalance",
      inputs: [
        { name: "sender", type: "address", internalType: "address" },
        { name: "balance", type: "uint256", internalType: "uint256" },
        { name: "needed", type: "uint256", internalType: "uint256" },
      ],
    },
    {
      type: "error",
      name: "ERC20InvalidApprover",
      inputs: [{ name: "approver", type: "address", internalType: "address" }],
    },
    {
      type: "error",
      name: "ERC20InvalidReceiver",
      inputs: [{ name: "receiver", type: "address", internalType: "address" }],
    },
    {
      type: "error",
      name: "ERC20InvalidSender",
      inputs: [{ name: "sender", type: "address", internalType: "address" }],
    },
    {
      type: "error",
      name: "ERC20InvalidSpender",
      inputs: [{ name: "spender", type: "address", internalType: "address" }],
    },
    { type: "error", name: "ERC20TransferAmountMismatch", inputs: [] },
    {
      type: "error",
      name: "ERC2612ExpiredSignature",
      inputs: [{ name: "deadline", type: "uint256", internalType: "uint256" }],
    },
    {
      type: "error",
      name: "ERC2612InvalidSigner",
      inputs: [
        { name: "signer", type: "address", internalType: "address" },
        { name: "owner", type: "address", internalType: "address" },
      ],
    },
    { type: "error", name: "EthAmountMismatch", inputs: [] },
    { type: "error", name: "EthAmountTooSmall", inputs: [] },
    { type: "error", name: "EthTransferFailed", inputs: [] },
    { type: "error", name: "EthTransferInvalid", inputs: [] },
    { type: "error", name: "FailedCall", inputs: [] },
    { type: "error", name: "InitialOrderSizeTooLarge", inputs: [] },
    {
      type: "error",
      name: "InsufficientBalance",
      inputs: [
        { name: "balance", type: "uint256", internalType: "uint256" },
        { name: "needed", type: "uint256", internalType: "uint256" },
      ],
    },
    { type: "error", name: "InsufficientFunds", inputs: [] },
    { type: "error", name: "InsufficientLiquidity", inputs: [] },
    {
      type: "error",
      name: "InvalidAccountNonce",
      inputs: [
        { name: "account", type: "address", internalType: "address" },
        { name: "currentNonce", type: "uint256", internalType: "uint256" },
      ],
    },
    { type: "error", name: "InvalidCurrencyLowerTick", inputs: [] },
    { type: "error", name: "InvalidInitialization", inputs: [] },
    { type: "error", name: "InvalidMarketType", inputs: [] },
    {
      type: "error",
      name: "InvalidTickRangeMisordered",
      inputs: [
        { name: "tickLower", type: "int24", internalType: "int24" },
        { name: "tickUpper", type: "int24", internalType: "int24" },
      ],
    },
    { type: "error", name: "InvalidWethLowerTick", inputs: [] },
    { type: "error", name: "MarketAlreadyGraduated", inputs: [] },
    { type: "error", name: "MarketNotGraduated", inputs: [] },
    {
      type: "error",
      name: "MaxShareToBeSoldExceeded",
      inputs: [
        { name: "value", type: "uint256", internalType: "uint256" },
        { name: "limit", type: "uint256", internalType: "uint256" },
      ],
    },
    { type: "error", name: "NotInitializing", inputs: [] },
    { type: "error", name: "NotOwner", inputs: [] },
    { type: "error", name: "OneOwnerRequired", inputs: [] },
    { type: "error", name: "OnlyOwner", inputs: [] },
    { type: "error", name: "OnlyPool", inputs: [] },
    { type: "error", name: "OnlyWeth", inputs: [] },
    { type: "error", name: "OwnerCannotBeAddressZero", inputs: [] },
    { type: "error", name: "ReentrancyGuardReentrantCall", inputs: [] },
    {
      type: "error",
      name: "SafeERC20FailedOperation",
      inputs: [{ name: "token", type: "address", internalType: "address" }],
    },
    { type: "error", name: "SlippageBoundsExceeded", inputs: [] },
    { type: "error", name: "UseRevokeOwnershipToRemoveSelf", inputs: [] },
  ] as const;